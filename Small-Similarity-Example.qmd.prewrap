```{python}
import torch
from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Define our texts
texts = ["I like to be in my house", 
         "I enjoy staying home", 
         "The isotope 238u decays to 206pb"]

# Check if GPU is available and use it if possible
device = 'cuda' if torch.cuda.is_available() else 'cpu'
print(f"Using {device} for inference.")

# Load the model
model = SentenceTransformer('all-MiniLM-L6-v2', device=device)

# Generate embeddings
embeddings = model.encode(texts)

# Compute pairwise similarities
similarities = cosine_similarity(embeddings)

# Create a heatmap
plt.figure(figsize=(10, 8))
ax = sns.heatmap(similarities, annot=True, cmap='Blues', vmin=0, vmax=1, square=True)

# Remove x-axis ticks
ax.set_xticks([])

# Set y-axis tick labels
ax.set_yticks(np.arange(len(texts)) + 0.5)
ax.set_yticklabels(texts, rotation=0, ha='right')

# Add x-axis labels at the bottom
ax.set_xlabel('')
plt.xticks([])
for i, text in enumerate(texts):
    plt.text(i + 0.5, len(texts) + 0.1, text, 
             horizontalalignment='center', 
             verticalalignment='center',
             rotation=0, 
             fontsize=10)

plt.title('Sentence Similarities')
plt.tight_layout()
plt.show()
```
